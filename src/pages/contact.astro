---
import Layout from '../layouts/Layout.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
---

<Layout title="Request Demo - Starmesh">
	<Navbar />
	<main class="contact-page">
		<div class="contact-header">
			<h1>Request Demo</h1>
		</div>
		
		<div class="contact-form-container">
			<form id="contactForm" class="contact-form">
				<div class="form-row">
					<div class="form-group">
						<label for="name">Full Name *</label>
						<input type="text" id="name" name="Full Name" required>
					</div>

					<div class="form-group">
						<label for="email">Work Email *</label>
						<input type="email" id="email" name="Work Email" required>
						<span class="error-message" id="emailError"></span>
					</div>
				</div>

				<div class="form-group">
					<label for="useCase">What are you hoping to use Starmesh for? *</label>
					<textarea id="useCase" name="Use Case" rows="3" required></textarea>
				</div>

				<div class="form-group">
					<label class="checkbox-label">
						<input type="checkbox" id="liveChat" name="Live Chat?">
						<span class="checkbox-text">Would you like to schedule a live chat with us?</span>
					</label>
				</div>

				<div class="button-container">
					<button type="submit" class="submit-button">
						<span class="button-text">Submit</span>
						<div class="button-loader hidden"></div>
					</button>
				</div>

				<div id="formError" class="error-message form-error hidden">
					An error occurred. Please try again later.
				</div>
			</form>

			<div id="thankYouMessage" class="thank-you-message hidden">
				<h3>Thank you for your interest!</h3>
				<a href="https://calendly.com/YOUR-LINK" class="calendly-button" target="_blank">Schedule a Call</a>
			</div>
		</div>
	</main>
	<Footer />
</Layout>

<style>
	.contact-page {
		min-height: 100vh;
		padding: 2.5rem 1.5rem 1rem;
		background: linear-gradient(180deg, rgba(255, 255, 255, 0.02) 0%, rgba(139, 92, 246, 0.05) 100%);
		position: relative;
		overflow-x: hidden;
		display: flex;
		flex-direction: column;
		align-items: center;
		width: 100%;
		box-sizing: border-box;
	}

	.contact-header {
		text-align: center;
		width: 100%;
		margin: 0 auto 1rem;
		padding: 0 1rem;
		box-sizing: border-box;
	}

	.contact-header h1 {
		font-size: clamp(2em, 4vw, 3em);
		font-weight: 600;
		background: linear-gradient(90deg, #E4D6F5 0%, #8B5CF6 100%);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
	}

	.contact-form-container {
		width: 100%;
		max-width: 600px;
		margin: 0 auto;
		padding: 1.5rem;
		background: rgba(255, 255, 255, 0.02);
		border-radius: 1rem;
		border: 1px solid rgba(255, 255, 255, 0.1);
		box-sizing: border-box;
	}

	.contact-form {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		width: 100%;
		box-sizing: border-box;
	}

	.form-row {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 1rem;
	}

	.form-group {
		display: flex;
		flex-direction: column;
		gap: 0.25rem;
	}

	label {
		color: #B3acf2;
		font-size: 1rem;
		font-weight: 500;
	}

	input, textarea {
		width: 100%;
		box-sizing: border-box;
		padding: 0.75rem;
		border-radius: 0.5rem;
		border: 1px solid rgba(139, 92, 246, 0.3);
		background: rgba(255, 255, 255, 0.05);
		color: #fff;
		font-size: 1rem;
		transition: all 0.2s ease;
	}

	input:focus, textarea:focus {
		outline: none;
		border-color: #8B5CF6;
		box-shadow: 0 0 0 2px rgba(139, 92, 246, 0.2);
	}

	textarea {
		resize: vertical;
		min-height: 70px;
		max-height: 150px;
	}

	.checkbox-label {
		display: flex;
		align-items: center;
		gap: 0.75rem;
		cursor: pointer;
	}

	.checkbox-text {
		font-size: 1rem;
		color: #B3acf2;
		font-weight: 500;
	}

	input[type="checkbox"] {
		width: 1.125rem;
		height: 1.125rem;
		padding: 0;
		border-radius: 0.25rem;
		cursor: pointer;
		appearance: none;
		-webkit-appearance: none;
		background: rgba(255, 255, 255, 0.05);
		border: 1px solid rgba(139, 92, 246, 0.3);
		position: relative;
		vertical-align: middle;
		transition: all 0.2s ease;
	}

	input[type="checkbox"]:checked {
		background: #8B5CF6;
		border-color: #8B5CF6;
	}

	input[type="checkbox"]:checked::after {
		content: '';
		position: absolute;
		left: 4px;
		top: 1px;
		width: 4px;
		height: 8px;
		border: solid white;
		border-width: 0 2px 2px 0;
		transform: rotate(45deg);
	}

	input[type="checkbox"]:hover {
		border-color: #8B5CF6;
	}

	input[type="checkbox"]:focus {
		outline: none;
		box-shadow: 0 0 0 2px rgba(139, 92, 246, 0.2);
	}

	.button-container {
		display: flex;
		justify-content: center;
		margin-top: 0.25rem;
	}

	.submit-button {
		background: #8B5CF6;
		color: white;
		font-size: 1rem;
		padding: 0.75rem 2.5rem;
		border-radius: 0.5rem;
		border: none;
		cursor: pointer;
		transition: all 0.2s ease;
		font-weight: 500;
		min-width: 120px;
		font-family: 'Lato', sans-serif;
		letter-spacing: 0.01em;
	}

	.submit-button:hover {
		background: #7C3AED;
		transform: translateY(-2px);
		box-shadow: 0 4px 20px rgba(139, 92, 246, 0.3);
	}

	.error-message {
		color: #ef4444;
		font-size: 0.75rem;
		margin-top: 0.25rem;
	}

	.thank-you-message {
		text-align: center;
		padding: 2rem;
	}

	.thank-you-message h3 {
		color: #E4D6F5;
		font-size: 1.5rem;
		margin-bottom: 1rem;
	}

	.thank-you-message p {
		color: #B3acf2;
		margin-bottom: 1.5rem;
	}

	.calendly-button {
		display: inline-block;
		background: #8B5CF6;
		color: white;
		padding: 0.75rem 1.5rem;
		border-radius: 0.5rem;
		text-decoration: none;
		transition: all 0.2s ease;
	}

	.calendly-button:hover {
		background: #7C3AED;
		transform: translateY(-2px);
		box-shadow: 0 4px 20px rgba(139, 92, 246, 0.3);
	}

	.hidden {
		display: none;
	}

	@media (max-width: 768px) {
		.contact-page {
			padding: 1.5rem 0.75rem 1rem;
		}
	}

	@media (max-width: 640px) {
		.contact-form-container {
			padding: 1rem;
			border-radius: 0.75rem;
		}

		.form-row {
			grid-template-columns: 1fr;
			gap: 0.75rem;
		}

		input, textarea {
			padding: 0.625rem;
			font-size: 16px; /* Prevent iOS zoom */
		}

		input[type="checkbox"] {
			width: 1rem;
			height: 1rem;
		}

		input[type="checkbox"]:checked::after {
			left: 3px;
			top: 0px;
			width: 4px;
			height: 8px;
		}
	}

	@media (max-width: 480px) {
		.contact-page {
			padding: 1.5rem 0.5rem 1rem;
		}
	}

	@media (max-height: 700px) {
		.contact-page {
			padding-top: 1rem;
		}

		.contact-header {
			margin-bottom: 0.5rem;
		}
	}

	.button-loader {
		width: 20px;
		height: 20px;
		border: 2px solid #ffffff;
		border-radius: 50%;
		border-top-color: transparent;
		animation: spin 1s linear infinite;
		margin: 0 auto;
	}

	@keyframes spin {
		to {
			transform: rotate(360deg);
		}
	}

	.form-error {
		text-align: center;
		margin-top: 1rem;
		padding: 0.75rem;
		background: rgba(239, 68, 68, 0.1);
		border-radius: 0.5rem;
	}

	.hidden {
		display: none !important;
	}
</style>

<script>
	const FORM_URL = 'https://script.google.com/macros/s/AKfycbyvAeaQnN-yvtE95NP1_z_Uiz_0t4_6g66hof8px3tFGytLwZyTdN0IUbsenJh0lOucUA/exec';
	
	const form = document.getElementById('contactForm') as HTMLFormElement;
	const thankYouMessage = document.getElementById('thankYouMessage');
	const emailInput = document.getElementById('email') as HTMLInputElement;
	const emailError = document.getElementById('emailError');
	const liveChatCheckbox = document.getElementById('liveChat') as HTMLInputElement;
	const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
	const buttonText = submitButton.querySelector('.button-text') as HTMLElement;
	const buttonLoader = submitButton.querySelector('.button-loader') as HTMLElement;
	const formError = document.getElementById('formError');

	function isWorkEmail(email: string): boolean {
		const personalDomains = [
			'gmail.com', 'yahoo.com', 'hotmail.com', 'outlook.com', 
			'aol.com', 'icloud.com', 'mail.com', 'protonmail.com'
		];
		const domain = email.split('@')[1]?.toLowerCase();
		return domain ? !personalDomains.includes(domain) : false;
	}

	emailInput?.addEventListener('input', () => {
		if (emailError) {
			if (!isWorkEmail(emailInput.value)) {
				emailError.textContent = 'Please use your work email';
				emailInput.setCustomValidity('Please use your work email');
			} else {
				emailError.textContent = '';
				emailInput.setCustomValidity('');
			}
		}
	});

	function setSubmitting(isSubmitting: boolean) {
		submitButton.disabled = isSubmitting;
		buttonText.style.display = isSubmitting ? 'none' : 'inline';
		buttonLoader.classList.toggle('hidden', !isSubmitting);
	}

	function showError(show: boolean) {
		if (formError) {
			formError.classList.toggle('hidden', !show);
		}
	}

	form?.addEventListener('submit', async (e) => {
		e.preventDefault();
		showError(false);
		setSubmitting(true);

		try {
			const formData = new FormData(form);
			const data = {
				name: formData.get('Full Name'),
				email: formData.get('Work Email'),
				useCase: formData.get('Use Case'),
				liveChat: formData.get('Live Chat?') === 'on',
				timestamp: new Date().toISOString()
			};
			
			// Store in localStorage as backup
			const submissions = JSON.parse(localStorage.getItem('formSubmissions') || '[]');
			submissions.push(data);
			localStorage.setItem('formSubmissions', JSON.stringify(submissions));

			// Submit to Google Apps Script
			const response = await fetch(FORM_URL, {
				method: 'POST',
				mode: 'no-cors',
				headers: {
					'Content-Type': 'application/x-www-form-urlencoded',
				},
				body: new URLSearchParams(formData as any),
			});

			// Since we're using no-cors, we won't get a proper response
			// So we'll assume success if there's no error
			form.style.display = 'none';
			if (thankYouMessage) {
				thankYouMessage.classList.remove('hidden');
				// Only show Calendly link if they checked live chat
				const calendlyButton = thankYouMessage.querySelector('.calendly-button');
				if (calendlyButton) {
					calendlyButton.style.display = liveChatCheckbox.checked ? 'inline-block' : 'none';
				}
			}
		} catch (error) {
			console.error('Form submission error:', error);
			showError(true);
			setSubmitting(false);
		}
	});
</script> 